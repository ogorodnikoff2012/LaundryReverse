//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0
// See https://eclipse-ee4j.github.io/jaxb-ri
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2023.05.23 at 11:55:48 PM CEST
//

package tk.xenon98.laundryapp.driver.xml;

import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the
 * generated package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML
 * content.
 * The Java representation of XML content can consist of schema derived interfaces and classes representing the
 * binding
 * of schema type definitions, element declarations and model groups. Factory methods for each of these are
 * provided in
 * this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Hierarchy_QNAME = new QName("", "hierarchy");
    private final static QName _NodeTypeNode_QNAME = new QName("", "node");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
     * generated
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Hierarchy }
     *
     */
    public Hierarchy createHierarchyType() {
        return new Hierarchy();
    }

    /**
     * Create an instance of {@link Node }
     *
     */
    public Node createNodeType() {
        return new Node();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Hierarchy }{@code >}
     *
     * @param value
     *            Java instance representing xml element's value.
     *
     * @return the new instance of {@link JAXBElement }{@code <}{@link Hierarchy }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "hierarchy")
    public JAXBElement<Hierarchy> createHierarchy(Hierarchy value) {
        return new JAXBElement<Hierarchy>(_Hierarchy_QNAME, Hierarchy.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Node }{@code >}
     *
     * @param value
     *            Java instance representing xml element's value.
     *
     * @return the new instance of {@link JAXBElement }{@code <}{@link Node }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "node", scope = Node.class)
    public JAXBElement<Node> createNodeTypeNode(Node value) {
        return new JAXBElement<Node>(_NodeTypeNode_QNAME, Node.class, Node.class, value);
    }

}
